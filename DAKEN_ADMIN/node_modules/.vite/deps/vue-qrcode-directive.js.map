{
  "version": 3,
  "sources": ["../../vue-qrcode-directive/src/lib/qrcode.js", "../../vue-qrcode-directive/index.js"],
  "sourcesContent": ["//---------------------------------------------------------------------\r\n// QRCode for JavaScript\r\n//\r\n// Copyright (c) 2009 Kazuhiko Arase\r\n//\r\n// URL: http://www.d-project.com/\r\n//\r\n// Licensed under the MIT license:\r\n//   http://www.opensource.org/licenses/mit-license.php\r\n//\r\n// The word \"QR Code\" is registered trademark of \r\n// DENSO WAVE INCORPORATED\r\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\r\n//\r\n//---------------------------------------------------------------------\r\n\r\n//---------------------------------------------------------------------\r\n// QR8bitByte\r\n//---------------------------------------------------------------------\r\n\r\nfunction QR8bitByte(data) {\r\n\tthis.mode = QRMode.MODE_8BIT_BYTE;\r\n\tthis.data = data;\r\n}\r\n\r\nQR8bitByte.prototype = {\r\n\r\n\tgetLength : function(buffer) {\r\n\t\treturn this.data.length;\r\n\t},\r\n\t\r\n\twrite : function(buffer) {\r\n\t\tfor (var i = 0; i < this.data.length; i++) {\r\n\t\t\t// not JIS ...\r\n\t\t\tbuffer.put(this.data.charCodeAt(i), 8);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n//---------------------------------------------------------------------\r\n// QRCode\r\n//---------------------------------------------------------------------\r\n\r\nexport default function QRCode(typeNumber, errorCorrectLevel) {\r\n\tthis.typeNumber = typeNumber;\r\n\tthis.errorCorrectLevel = errorCorrectLevel;\r\n\tthis.modules = null;\r\n\tthis.moduleCount = 0;\r\n\tthis.dataCache = null;\r\n\tthis.dataList = new Array();\r\n}\r\n\r\nQRCode.prototype = {\r\n\t\r\n\taddData : function(data) {\r\n\t\tvar newData = new QR8bitByte(data);\r\n\t\tthis.dataList.push(newData);\r\n\t\tthis.dataCache = null;\r\n\t},\r\n\t\r\n\tisDark : function(row, col) {\r\n\t\tif (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\r\n\t\t\tthrow new Error(row + \",\" + col);\r\n\t\t}\r\n\t\treturn this.modules[row][col];\r\n\t},\r\n\r\n\tgetModuleCount : function() {\r\n\t\treturn this.moduleCount;\r\n\t},\r\n\t\r\n\tmake : function() {\r\n\t\t// Calculate automatically typeNumber if provided is < 1\r\n\t\tif (this.typeNumber < 1 ){\r\n\t\t\tvar typeNumber = 1;\r\n\t\t\tfor (typeNumber = 1; typeNumber < 40; typeNumber++) {\r\n\t\t\t\tvar rsBlocks = QRRSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\r\n\r\n\t\t\t\tvar buffer = new QRBitBuffer();\r\n\t\t\t\tvar totalDataCount = 0;\r\n\t\t\t\tfor (var i = 0; i < rsBlocks.length; i++) {\r\n\t\t\t\t\ttotalDataCount += rsBlocks[i].dataCount;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (var i = 0; i < this.dataList.length; i++) {\r\n\t\t\t\t\tvar data = this.dataList[i];\r\n\t\t\t\t\tbuffer.put(data.mode, 4);\r\n\t\t\t\t\tbuffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber) );\r\n\t\t\t\t\tdata.write(buffer);\r\n\t\t\t\t}\r\n\t\t\t\tif (buffer.getLengthInBits() <= totalDataCount * 8)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.typeNumber = typeNumber;\r\n\t\t}\r\n\t\tthis.makeImpl(false, this.getBestMaskPattern() );\r\n\t},\r\n\t\r\n\tmakeImpl : function(test, maskPattern) {\r\n\t\t\r\n\t\tthis.moduleCount = this.typeNumber * 4 + 17;\r\n\t\tthis.modules = new Array(this.moduleCount);\r\n\t\t\r\n\t\tfor (var row = 0; row < this.moduleCount; row++) {\r\n\t\t\t\r\n\t\t\tthis.modules[row] = new Array(this.moduleCount);\r\n\t\t\t\r\n\t\t\tfor (var col = 0; col < this.moduleCount; col++) {\r\n\t\t\t\tthis.modules[row][col] = null;//(col + row) % 3;\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tthis.setupPositionProbePattern(0, 0);\r\n\t\tthis.setupPositionProbePattern(this.moduleCount - 7, 0);\r\n\t\tthis.setupPositionProbePattern(0, this.moduleCount - 7);\r\n\t\tthis.setupPositionAdjustPattern();\r\n\t\tthis.setupTimingPattern();\r\n\t\tthis.setupTypeInfo(test, maskPattern);\r\n\t\t\r\n\t\tif (this.typeNumber >= 7) {\r\n\t\t\tthis.setupTypeNumber(test);\r\n\t\t}\r\n\t\r\n\t\tif (this.dataCache == null) {\r\n\t\t\tthis.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\r\n\t\t}\r\n\t\r\n\t\tthis.mapData(this.dataCache, maskPattern);\r\n\t},\r\n\r\n\tsetupPositionProbePattern : function(row, col)  {\r\n\t\t\r\n\t\tfor (var r = -1; r <= 7; r++) {\r\n\t\t\t\r\n\t\t\tif (row + r <= -1 || this.moduleCount <= row + r) continue;\r\n\t\t\t\r\n\t\t\tfor (var c = -1; c <= 7; c++) {\r\n\t\t\t\t\r\n\t\t\t\tif (col + c <= -1 || this.moduleCount <= col + c) continue;\r\n\t\t\t\t\r\n\t\t\t\tif ( (0 <= r && r <= 6 && (c == 0 || c == 6) )\r\n\t\t\t\t\t\t|| (0 <= c && c <= 6 && (r == 0 || r == 6) )\r\n\t\t\t\t\t\t|| (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {\r\n\t\t\t\t\tthis.modules[row + r][col + c] = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.modules[row + r][col + c] = false;\r\n\t\t\t\t}\r\n\t\t\t}\t\t\r\n\t\t}\t\t\r\n\t},\r\n\t\r\n\tgetBestMaskPattern : function() {\r\n\t\r\n\t\tvar minLostPoint = 0;\r\n\t\tvar pattern = 0;\r\n\t\r\n\t\tfor (var i = 0; i < 8; i++) {\r\n\t\t\t\r\n\t\t\tthis.makeImpl(true, i);\r\n\t\r\n\t\t\tvar lostPoint = QRUtil.getLostPoint(this);\r\n\t\r\n\t\t\tif (i == 0 || minLostPoint >  lostPoint) {\r\n\t\t\t\tminLostPoint = lostPoint;\r\n\t\t\t\tpattern = i;\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\treturn pattern;\r\n\t},\r\n\t\r\n\tcreateMovieClip : function(target_mc, instance_name, depth) {\r\n\t\r\n\t\tvar qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\r\n\t\tvar cs = 1;\r\n\t\r\n\t\tthis.make();\r\n\r\n\t\tfor (var row = 0; row < this.modules.length; row++) {\r\n\t\t\t\r\n\t\t\tvar y = row * cs;\r\n\t\t\t\r\n\t\t\tfor (var col = 0; col < this.modules[row].length; col++) {\r\n\t\r\n\t\t\t\tvar x = col * cs;\r\n\t\t\t\tvar dark = this.modules[row][col];\r\n\t\t\t\r\n\t\t\t\tif (dark) {\r\n\t\t\t\t\tqr_mc.beginFill(0, 100);\r\n\t\t\t\t\tqr_mc.moveTo(x, y);\r\n\t\t\t\t\tqr_mc.lineTo(x + cs, y);\r\n\t\t\t\t\tqr_mc.lineTo(x + cs, y + cs);\r\n\t\t\t\t\tqr_mc.lineTo(x, y + cs);\r\n\t\t\t\t\tqr_mc.endFill();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn qr_mc;\r\n\t},\r\n\r\n\tsetupTimingPattern : function() {\r\n\t\t\r\n\t\tfor (var r = 8; r < this.moduleCount - 8; r++) {\r\n\t\t\tif (this.modules[r][6] != null) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tthis.modules[r][6] = (r % 2 == 0);\r\n\t\t}\r\n\t\r\n\t\tfor (var c = 8; c < this.moduleCount - 8; c++) {\r\n\t\t\tif (this.modules[6][c] != null) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tthis.modules[6][c] = (c % 2 == 0);\r\n\t\t}\r\n\t},\r\n\t\r\n\tsetupPositionAdjustPattern : function() {\r\n\t\r\n\t\tvar pos = QRUtil.getPatternPosition(this.typeNumber);\r\n\t\t\r\n\t\tfor (var i = 0; i < pos.length; i++) {\r\n\t\t\r\n\t\t\tfor (var j = 0; j < pos.length; j++) {\r\n\t\t\t\r\n\t\t\t\tvar row = pos[i];\r\n\t\t\t\tvar col = pos[j];\r\n\t\t\t\t\r\n\t\t\t\tif (this.modules[row][col] != null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tfor (var r = -2; r <= 2; r++) {\r\n\t\t\t\t\r\n\t\t\t\t\tfor (var c = -2; c <= 2; c++) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tif (r == -2 || r == 2 || c == -2 || c == 2 \r\n\t\t\t\t\t\t\t\t|| (r == 0 && c == 0) ) {\r\n\t\t\t\t\t\t\tthis.modules[row + r][col + c] = true;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.modules[row + r][col + c] = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\tsetupTypeNumber : function(test) {\r\n\t\r\n\t\tvar bits = QRUtil.getBCHTypeNumber(this.typeNumber);\r\n\t\r\n\t\tfor (var i = 0; i < 18; i++) {\r\n\t\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\r\n\t\t\tthis.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\r\n\t\t}\r\n\t\r\n\t\tfor (var i = 0; i < 18; i++) {\r\n\t\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\r\n\t\t\tthis.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\r\n\t\t}\r\n\t},\r\n\t\r\n\tsetupTypeInfo : function(test, maskPattern) {\r\n\t\r\n\t\tvar data = (this.errorCorrectLevel << 3) | maskPattern;\r\n\t\tvar bits = QRUtil.getBCHTypeInfo(data);\r\n\t\r\n\t\t// vertical\t\t\r\n\t\tfor (var i = 0; i < 15; i++) {\r\n\t\r\n\t\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\r\n\t\r\n\t\t\tif (i < 6) {\r\n\t\t\t\tthis.modules[i][8] = mod;\r\n\t\t\t} else if (i < 8) {\r\n\t\t\t\tthis.modules[i + 1][8] = mod;\r\n\t\t\t} else {\r\n\t\t\t\tthis.modules[this.moduleCount - 15 + i][8] = mod;\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\t// horizontal\r\n\t\tfor (var i = 0; i < 15; i++) {\r\n\t\r\n\t\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\r\n\t\t\t\r\n\t\t\tif (i < 8) {\r\n\t\t\t\tthis.modules[8][this.moduleCount - i - 1] = mod;\r\n\t\t\t} else if (i < 9) {\r\n\t\t\t\tthis.modules[8][15 - i - 1 + 1] = mod;\r\n\t\t\t} else {\r\n\t\t\t\tthis.modules[8][15 - i - 1] = mod;\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\t// fixed module\r\n\t\tthis.modules[this.moduleCount - 8][8] = (!test);\r\n\t\r\n\t},\r\n\t\r\n\tmapData : function(data, maskPattern) {\r\n\t\t\r\n\t\tvar inc = -1;\r\n\t\tvar row = this.moduleCount - 1;\r\n\t\tvar bitIndex = 7;\r\n\t\tvar byteIndex = 0;\r\n\t\t\r\n\t\tfor (var col = this.moduleCount - 1; col > 0; col -= 2) {\r\n\t\r\n\t\t\tif (col == 6) col--;\r\n\t\r\n\t\t\twhile (true) {\r\n\t\r\n\t\t\t\tfor (var c = 0; c < 2; c++) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (this.modules[row][col - c] == null) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar dark = false;\r\n\t\r\n\t\t\t\t\t\tif (byteIndex < data.length) {\r\n\t\t\t\t\t\t\tdark = ( ( (data[byteIndex] >>> bitIndex) & 1) == 1);\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tvar mask = QRUtil.getMask(maskPattern, row, col - c);\r\n\t\r\n\t\t\t\t\t\tif (mask) {\r\n\t\t\t\t\t\t\tdark = !dark;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.modules[row][col - c] = dark;\r\n\t\t\t\t\t\tbitIndex--;\r\n\t\r\n\t\t\t\t\t\tif (bitIndex == -1) {\r\n\t\t\t\t\t\t\tbyteIndex++;\r\n\t\t\t\t\t\t\tbitIndex = 7;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\trow += inc;\r\n\t\r\n\t\t\t\tif (row < 0 || this.moduleCount <= row) {\r\n\t\t\t\t\trow -= inc;\r\n\t\t\t\t\tinc = -inc;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n};\r\n\r\nQRCode.PAD0 = 0xEC;\r\nQRCode.PAD1 = 0x11;\r\n\r\nQRCode.createData = function(typeNumber, errorCorrectLevel, dataList) {\r\n\t\r\n\tvar rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\r\n\t\r\n\tvar buffer = new QRBitBuffer();\r\n\t\r\n\tfor (var i = 0; i < dataList.length; i++) {\r\n\t\tvar data = dataList[i];\r\n\t\tbuffer.put(data.mode, 4);\r\n\t\tbuffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber) );\r\n\t\tdata.write(buffer);\r\n\t}\r\n\r\n\t// calc num max data.\r\n\tvar totalDataCount = 0;\r\n\tfor (var i = 0; i < rsBlocks.length; i++) {\r\n\t\ttotalDataCount += rsBlocks[i].dataCount;\r\n\t}\r\n\r\n\tif (buffer.getLengthInBits() > totalDataCount * 8) {\r\n\t\tthrow new Error(\"code length overflow. (\"\r\n\t\t\t+ buffer.getLengthInBits()\r\n\t\t\t+ \">\"\r\n\t\t\t+  totalDataCount * 8\r\n\t\t\t+ \")\");\r\n\t}\r\n\r\n\t// end code\r\n\tif (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\r\n\t\tbuffer.put(0, 4);\r\n\t}\r\n\r\n\t// padding\r\n\twhile (buffer.getLengthInBits() % 8 != 0) {\r\n\t\tbuffer.putBit(false);\r\n\t}\r\n\r\n\t// padding\r\n\twhile (true) {\r\n\t\t\r\n\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tbuffer.put(QRCode.PAD0, 8);\r\n\t\t\r\n\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tbuffer.put(QRCode.PAD1, 8);\r\n\t}\r\n\r\n\treturn QRCode.createBytes(buffer, rsBlocks);\r\n}\r\n\r\nQRCode.createBytes = function(buffer, rsBlocks) {\r\n\r\n\tvar offset = 0;\r\n\t\r\n\tvar maxDcCount = 0;\r\n\tvar maxEcCount = 0;\r\n\t\r\n\tvar dcdata = new Array(rsBlocks.length);\r\n\tvar ecdata = new Array(rsBlocks.length);\r\n\t\r\n\tfor (var r = 0; r < rsBlocks.length; r++) {\r\n\r\n\t\tvar dcCount = rsBlocks[r].dataCount;\r\n\t\tvar ecCount = rsBlocks[r].totalCount - dcCount;\r\n\r\n\t\tmaxDcCount = Math.max(maxDcCount, dcCount);\r\n\t\tmaxEcCount = Math.max(maxEcCount, ecCount);\r\n\t\t\r\n\t\tdcdata[r] = new Array(dcCount);\r\n\t\t\r\n\t\tfor (var i = 0; i < dcdata[r].length; i++) {\r\n\t\t\tdcdata[r][i] = 0xff & buffer.buffer[i + offset];\r\n\t\t}\r\n\t\toffset += dcCount;\r\n\t\t\r\n\t\tvar rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\r\n\t\tvar rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\r\n\r\n\t\tvar modPoly = rawPoly.mod(rsPoly);\r\n\t\tecdata[r] = new Array(rsPoly.getLength() - 1);\r\n\t\tfor (var i = 0; i < ecdata[r].length; i++) {\r\n            var modIndex = i + modPoly.getLength() - ecdata[r].length;\r\n\t\t\tecdata[r][i] = (modIndex >= 0)? modPoly.get(modIndex) : 0;\r\n\t\t}\r\n\r\n\t}\r\n\t\r\n\tvar totalCodeCount = 0;\r\n\tfor (var i = 0; i < rsBlocks.length; i++) {\r\n\t\ttotalCodeCount += rsBlocks[i].totalCount;\r\n\t}\r\n\r\n\tvar data = new Array(totalCodeCount);\r\n\tvar index = 0;\r\n\r\n\tfor (var i = 0; i < maxDcCount; i++) {\r\n\t\tfor (var r = 0; r < rsBlocks.length; r++) {\r\n\t\t\tif (i < dcdata[r].length) {\r\n\t\t\t\tdata[index++] = dcdata[r][i];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfor (var i = 0; i < maxEcCount; i++) {\r\n\t\tfor (var r = 0; r < rsBlocks.length; r++) {\r\n\t\t\tif (i < ecdata[r].length) {\r\n\t\t\t\tdata[index++] = ecdata[r][i];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn data;\r\n\r\n}\r\n\r\n//---------------------------------------------------------------------\r\n// QRMode\r\n//---------------------------------------------------------------------\r\n\r\nvar QRMode = {\r\n\tMODE_NUMBER :\t\t1 << 0,\r\n\tMODE_ALPHA_NUM : \t1 << 1,\r\n\tMODE_8BIT_BYTE : \t1 << 2,\r\n\tMODE_KANJI :\t\t1 << 3\r\n};\r\n\r\n//---------------------------------------------------------------------\r\n// QRErrorCorrectLevel\r\n//---------------------------------------------------------------------\r\n \r\nexport const QRErrorCorrectLevel = {\r\n\tL : 1,\r\n\tM : 0,\r\n\tQ : 3,\r\n\tH : 2\r\n};\r\n\r\n//---------------------------------------------------------------------\r\n// QRMaskPattern\r\n//---------------------------------------------------------------------\r\n\r\nvar QRMaskPattern = {\r\n\tPATTERN000 : 0,\r\n\tPATTERN001 : 1,\r\n\tPATTERN010 : 2,\r\n\tPATTERN011 : 3,\r\n\tPATTERN100 : 4,\r\n\tPATTERN101 : 5,\r\n\tPATTERN110 : 6,\r\n\tPATTERN111 : 7\r\n};\r\n\r\n//---------------------------------------------------------------------\r\n// QRUtil\r\n//---------------------------------------------------------------------\r\n \r\nvar QRUtil = {\r\n\r\n    PATTERN_POSITION_TABLE : [\r\n\t    [],\r\n\t    [6, 18],\r\n\t    [6, 22],\r\n\t    [6, 26],\r\n\t    [6, 30],\r\n\t    [6, 34],\r\n\t    [6, 22, 38],\r\n\t    [6, 24, 42],\r\n\t    [6, 26, 46],\r\n\t    [6, 28, 50],\r\n\t    [6, 30, 54],\t\t\r\n\t    [6, 32, 58],\r\n\t    [6, 34, 62],\r\n\t    [6, 26, 46, 66],\r\n\t    [6, 26, 48, 70],\r\n\t    [6, 26, 50, 74],\r\n\t    [6, 30, 54, 78],\r\n\t    [6, 30, 56, 82],\r\n\t    [6, 30, 58, 86],\r\n\t    [6, 34, 62, 90],\r\n\t    [6, 28, 50, 72, 94],\r\n\t    [6, 26, 50, 74, 98],\r\n\t    [6, 30, 54, 78, 102],\r\n\t    [6, 28, 54, 80, 106],\r\n\t    [6, 32, 58, 84, 110],\r\n\t    [6, 30, 58, 86, 114],\r\n\t    [6, 34, 62, 90, 118],\r\n\t    [6, 26, 50, 74, 98, 122],\r\n\t    [6, 30, 54, 78, 102, 126],\r\n\t    [6, 26, 52, 78, 104, 130],\r\n\t    [6, 30, 56, 82, 108, 134],\r\n\t    [6, 34, 60, 86, 112, 138],\r\n\t    [6, 30, 58, 86, 114, 142],\r\n\t    [6, 34, 62, 90, 118, 146],\r\n\t    [6, 30, 54, 78, 102, 126, 150],\r\n\t    [6, 24, 50, 76, 102, 128, 154],\r\n\t    [6, 28, 54, 80, 106, 132, 158],\r\n\t    [6, 32, 58, 84, 110, 136, 162],\r\n\t    [6, 26, 54, 82, 110, 138, 166],\r\n\t    [6, 30, 58, 86, 114, 142, 170]\r\n    ],\r\n\r\n    G15 : (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0),\r\n    G18 : (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0),\r\n    G15_MASK : (1 << 14) | (1 << 12) | (1 << 10)\t| (1 << 4) | (1 << 1),\r\n\r\n    getBCHTypeInfo : function(data) {\r\n\t    var d = data << 10;\r\n\t    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\r\n\t\t    d ^= (QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) ) ); \t\r\n\t    }\r\n\t    return ( (data << 10) | d) ^ QRUtil.G15_MASK;\r\n    },\r\n\r\n    getBCHTypeNumber : function(data) {\r\n\t    var d = data << 12;\r\n\t    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\r\n\t\t    d ^= (QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) ) ); \t\r\n\t    }\r\n\t    return (data << 12) | d;\r\n    },\r\n\r\n    getBCHDigit : function(data) {\r\n\r\n\t    var digit = 0;\r\n\r\n\t    while (data != 0) {\r\n\t\t    digit++;\r\n\t\t    data >>>= 1;\r\n\t    }\r\n\r\n\t    return digit;\r\n    },\r\n\r\n    getPatternPosition : function(typeNumber) {\r\n\t    return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\r\n    },\r\n\r\n    getMask : function(maskPattern, i, j) {\r\n\t    \r\n\t    switch (maskPattern) {\r\n\t\t    \r\n\t    case QRMaskPattern.PATTERN000 : return (i + j) % 2 == 0;\r\n\t    case QRMaskPattern.PATTERN001 : return i % 2 == 0;\r\n\t    case QRMaskPattern.PATTERN010 : return j % 3 == 0;\r\n\t    case QRMaskPattern.PATTERN011 : return (i + j) % 3 == 0;\r\n\t    case QRMaskPattern.PATTERN100 : return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0;\r\n\t    case QRMaskPattern.PATTERN101 : return (i * j) % 2 + (i * j) % 3 == 0;\r\n\t    case QRMaskPattern.PATTERN110 : return ( (i * j) % 2 + (i * j) % 3) % 2 == 0;\r\n\t    case QRMaskPattern.PATTERN111 : return ( (i * j) % 3 + (i + j) % 2) % 2 == 0;\r\n\r\n\t    default :\r\n\t\t    throw new Error(\"bad maskPattern:\" + maskPattern);\r\n\t    }\r\n    },\r\n\r\n    getErrorCorrectPolynomial : function(errorCorrectLength) {\r\n\r\n\t    var a = new QRPolynomial([1], 0);\r\n\r\n\t    for (var i = 0; i < errorCorrectLength; i++) {\r\n\t\t    a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0) );\r\n\t    }\r\n\r\n\t    return a;\r\n    },\r\n\r\n    getLengthInBits : function(mode, type) {\r\n\r\n\t    if (1 <= type && type < 10) {\r\n\r\n\t\t    // 1 - 9\r\n\r\n\t\t    switch(mode) {\r\n\t\t    case QRMode.MODE_NUMBER \t: return 10;\r\n\t\t    case QRMode.MODE_ALPHA_NUM \t: return 9;\r\n\t\t    case QRMode.MODE_8BIT_BYTE\t: return 8;\r\n\t\t    case QRMode.MODE_KANJI  \t: return 8;\r\n\t\t    default :\r\n\t\t\t    throw new Error(\"mode:\" + mode);\r\n\t\t    }\r\n\r\n\t    } else if (type < 27) {\r\n\r\n\t\t    // 10 - 26\r\n\r\n\t\t    switch(mode) {\r\n\t\t    case QRMode.MODE_NUMBER \t: return 12;\r\n\t\t    case QRMode.MODE_ALPHA_NUM \t: return 11;\r\n\t\t    case QRMode.MODE_8BIT_BYTE\t: return 16;\r\n\t\t    case QRMode.MODE_KANJI  \t: return 10;\r\n\t\t    default :\r\n\t\t\t    throw new Error(\"mode:\" + mode);\r\n\t\t    }\r\n\r\n\t    } else if (type < 41) {\r\n\r\n\t\t    // 27 - 40\r\n\r\n\t\t    switch(mode) {\r\n\t\t    case QRMode.MODE_NUMBER \t: return 14;\r\n\t\t    case QRMode.MODE_ALPHA_NUM\t: return 13;\r\n\t\t    case QRMode.MODE_8BIT_BYTE\t: return 16;\r\n\t\t    case QRMode.MODE_KANJI  \t: return 12;\r\n\t\t    default :\r\n\t\t\t    throw new Error(\"mode:\" + mode);\r\n\t\t    }\r\n\r\n\t    } else {\r\n\t\t    throw new Error(\"type:\" + type);\r\n\t    }\r\n    },\r\n\r\n    getLostPoint : function(qrCode) {\r\n\t    \r\n\t    var moduleCount = qrCode.getModuleCount();\r\n\t    \r\n\t    var lostPoint = 0;\r\n\t    \r\n\t    // LEVEL1\r\n\t    \r\n\t    for (var row = 0; row < moduleCount; row++) {\r\n\r\n\t\t    for (var col = 0; col < moduleCount; col++) {\r\n\r\n\t\t\t    var sameCount = 0;\r\n\t\t\t    var dark = qrCode.isDark(row, col);\r\n\r\n\t\t\t\tfor (var r = -1; r <= 1; r++) {\r\n\r\n\t\t\t\t    if (row + r < 0 || moduleCount <= row + r) {\r\n\t\t\t\t\t    continue;\r\n\t\t\t\t    }\r\n\r\n\t\t\t\t    for (var c = -1; c <= 1; c++) {\r\n\r\n\t\t\t\t\t    if (col + c < 0 || moduleCount <= col + c) {\r\n\t\t\t\t\t\t    continue;\r\n\t\t\t\t\t    }\r\n\r\n\t\t\t\t\t    if (r == 0 && c == 0) {\r\n\t\t\t\t\t\t    continue;\r\n\t\t\t\t\t    }\r\n\r\n\t\t\t\t\t    if (dark == qrCode.isDark(row + r, col + c) ) {\r\n\t\t\t\t\t\t    sameCount++;\r\n\t\t\t\t\t    }\r\n\t\t\t\t    }\r\n\t\t\t    }\r\n\r\n\t\t\t    if (sameCount > 5) {\r\n\t\t\t\t    lostPoint += (3 + sameCount - 5);\r\n\t\t\t    }\r\n\t\t    }\r\n\t    }\r\n\r\n\t    // LEVEL2\r\n\r\n\t    for (var row = 0; row < moduleCount - 1; row++) {\r\n\t\t    for (var col = 0; col < moduleCount - 1; col++) {\r\n\t\t\t    var count = 0;\r\n\t\t\t    if (qrCode.isDark(row,     col    ) ) count++;\r\n\t\t\t    if (qrCode.isDark(row + 1, col    ) ) count++;\r\n\t\t\t    if (qrCode.isDark(row,     col + 1) ) count++;\r\n\t\t\t    if (qrCode.isDark(row + 1, col + 1) ) count++;\r\n\t\t\t    if (count == 0 || count == 4) {\r\n\t\t\t\t    lostPoint += 3;\r\n\t\t\t    }\r\n\t\t    }\r\n\t    }\r\n\r\n\t    // LEVEL3\r\n\r\n\t    for (var row = 0; row < moduleCount; row++) {\r\n\t\t    for (var col = 0; col < moduleCount - 6; col++) {\r\n\t\t\t    if (qrCode.isDark(row, col)\r\n\t\t\t\t\t    && !qrCode.isDark(row, col + 1)\r\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 2)\r\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 3)\r\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 4)\r\n\t\t\t\t\t    && !qrCode.isDark(row, col + 5)\r\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 6) ) {\r\n\t\t\t\t    lostPoint += 40;\r\n\t\t\t    }\r\n\t\t    }\r\n\t    }\r\n\r\n\t    for (var col = 0; col < moduleCount; col++) {\r\n\t\t    for (var row = 0; row < moduleCount - 6; row++) {\r\n\t\t\t    if (qrCode.isDark(row, col)\r\n\t\t\t\t\t    && !qrCode.isDark(row + 1, col)\r\n\t\t\t\t\t    &&  qrCode.isDark(row + 2, col)\r\n\t\t\t\t\t    &&  qrCode.isDark(row + 3, col)\r\n\t\t\t\t\t    &&  qrCode.isDark(row + 4, col)\r\n\t\t\t\t\t    && !qrCode.isDark(row + 5, col)\r\n\t\t\t\t\t    &&  qrCode.isDark(row + 6, col) ) {\r\n\t\t\t\t    lostPoint += 40;\r\n\t\t\t    }\r\n\t\t    }\r\n\t    }\r\n\r\n\t    // LEVEL4\r\n\t    \r\n\t    var darkCount = 0;\r\n\r\n\t    for (var col = 0; col < moduleCount; col++) {\r\n\t\t    for (var row = 0; row < moduleCount; row++) {\r\n\t\t\t    if (qrCode.isDark(row, col) ) {\r\n\t\t\t\t    darkCount++;\r\n\t\t\t    }\r\n\t\t    }\r\n\t    }\r\n\t    \r\n\t    var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\r\n\t    lostPoint += ratio * 10;\r\n\r\n\t    return lostPoint;\t\t\r\n    }\r\n\r\n};\r\n\r\n\r\n//---------------------------------------------------------------------\r\n// QRMath\r\n//---------------------------------------------------------------------\r\n\r\nvar QRMath = {\r\n\r\n\tglog : function(n) {\r\n\t\r\n\t\tif (n < 1) {\r\n\t\t\tthrow new Error(\"glog(\" + n + \")\");\r\n\t\t}\r\n\t\t\r\n\t\treturn QRMath.LOG_TABLE[n];\r\n\t},\r\n\t\r\n\tgexp : function(n) {\r\n\t\r\n\t\twhile (n < 0) {\r\n\t\t\tn += 255;\r\n\t\t}\r\n\t\r\n\t\twhile (n >= 256) {\r\n\t\t\tn -= 255;\r\n\t\t}\r\n\t\r\n\t\treturn QRMath.EXP_TABLE[n];\r\n\t},\r\n\t\r\n\tEXP_TABLE : new Array(256),\r\n\t\r\n\tLOG_TABLE : new Array(256)\r\n\r\n};\r\n\t\r\nfor (var i = 0; i < 8; i++) {\r\n\tQRMath.EXP_TABLE[i] = 1 << i;\r\n}\r\nfor (var i = 8; i < 256; i++) {\r\n\tQRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4]\r\n\t\t^ QRMath.EXP_TABLE[i - 5]\r\n\t\t^ QRMath.EXP_TABLE[i - 6]\r\n\t\t^ QRMath.EXP_TABLE[i - 8];\r\n}\r\nfor (var i = 0; i < 255; i++) {\r\n\tQRMath.LOG_TABLE[QRMath.EXP_TABLE[i] ] = i;\r\n}\r\n\r\n//---------------------------------------------------------------------\r\n// QRPolynomial\r\n//---------------------------------------------------------------------\r\n\r\nfunction QRPolynomial(num, shift) {\r\n\r\n\tif (num.length == undefined) {\r\n\t\tthrow new Error(num.length + \"/\" + shift);\r\n\t}\r\n\r\n\tvar offset = 0;\r\n\r\n\twhile (offset < num.length && num[offset] == 0) {\r\n\t\toffset++;\r\n\t}\r\n\r\n\tthis.num = new Array(num.length - offset + shift);\r\n\tfor (var i = 0; i < num.length - offset; i++) {\r\n\t\tthis.num[i] = num[i + offset];\r\n\t}\r\n}\r\n\r\nQRPolynomial.prototype = {\r\n\r\n\tget : function(index) {\r\n\t\treturn this.num[index];\r\n\t},\r\n\t\r\n\tgetLength : function() {\r\n\t\treturn this.num.length;\r\n\t},\r\n\t\r\n\tmultiply : function(e) {\r\n\t\r\n\t\tvar num = new Array(this.getLength() + e.getLength() - 1);\r\n\t\r\n\t\tfor (var i = 0; i < this.getLength(); i++) {\r\n\t\t\tfor (var j = 0; j < e.getLength(); j++) {\r\n\t\t\t\tnum[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i) ) + QRMath.glog(e.get(j) ) );\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\treturn new QRPolynomial(num, 0);\r\n\t},\r\n\t\r\n\tmod : function(e) {\r\n\t\r\n\t\tif (this.getLength() - e.getLength() < 0) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\r\n\t\tvar ratio = QRMath.glog(this.get(0) ) - QRMath.glog(e.get(0) );\r\n\t\r\n\t\tvar num = new Array(this.getLength() );\r\n\t\t\r\n\t\tfor (var i = 0; i < this.getLength(); i++) {\r\n\t\t\tnum[i] = this.get(i);\r\n\t\t}\r\n\t\t\r\n\t\tfor (var i = 0; i < e.getLength(); i++) {\r\n\t\t\tnum[i] ^= QRMath.gexp(QRMath.glog(e.get(i) ) + ratio);\r\n\t\t}\r\n\t\r\n\t\t// recursive call\r\n\t\treturn new QRPolynomial(num, 0).mod(e);\r\n\t}\r\n};\r\n\r\n//---------------------------------------------------------------------\r\n// QRRSBlock\r\n//---------------------------------------------------------------------\r\n\r\nfunction QRRSBlock(totalCount, dataCount) {\r\n\tthis.totalCount = totalCount;\r\n\tthis.dataCount  = dataCount;\r\n}\r\n\r\nQRRSBlock.RS_BLOCK_TABLE = [\r\n\r\n\t// L\r\n\t// M\r\n\t// Q\r\n\t// H\r\n\r\n\t// 1\r\n\t[1, 26, 19],\r\n\t[1, 26, 16],\r\n\t[1, 26, 13],\r\n\t[1, 26, 9],\r\n\t\r\n\t// 2\r\n\t[1, 44, 34],\r\n\t[1, 44, 28],\r\n\t[1, 44, 22],\r\n\t[1, 44, 16],\r\n\r\n\t// 3\r\n\t[1, 70, 55],\r\n\t[1, 70, 44],\r\n\t[2, 35, 17],\r\n\t[2, 35, 13],\r\n\r\n\t// 4\t\t\r\n\t[1, 100, 80],\r\n\t[2, 50, 32],\r\n\t[2, 50, 24],\r\n\t[4, 25, 9],\r\n\t\r\n\t// 5\r\n\t[1, 134, 108],\r\n\t[2, 67, 43],\r\n\t[2, 33, 15, 2, 34, 16],\r\n\t[2, 33, 11, 2, 34, 12],\r\n\t\r\n\t// 6\r\n\t[2, 86, 68],\r\n\t[4, 43, 27],\r\n\t[4, 43, 19],\r\n\t[4, 43, 15],\r\n\t\r\n\t// 7\t\t\r\n\t[2, 98, 78],\r\n\t[4, 49, 31],\r\n\t[2, 32, 14, 4, 33, 15],\r\n\t[4, 39, 13, 1, 40, 14],\r\n\t\r\n\t// 8\r\n\t[2, 121, 97],\r\n\t[2, 60, 38, 2, 61, 39],\r\n\t[4, 40, 18, 2, 41, 19],\r\n\t[4, 40, 14, 2, 41, 15],\r\n\t\r\n\t// 9\r\n\t[2, 146, 116],\r\n\t[3, 58, 36, 2, 59, 37],\r\n\t[4, 36, 16, 4, 37, 17],\r\n\t[4, 36, 12, 4, 37, 13],\r\n\t\r\n\t// 10\t\t\r\n\t[2, 86, 68, 2, 87, 69],\r\n\t[4, 69, 43, 1, 70, 44],\r\n\t[6, 43, 19, 2, 44, 20],\r\n\t[6, 43, 15, 2, 44, 16],\r\n\r\n\t// 11\r\n\t[4, 101, 81],\r\n\t[1, 80, 50, 4, 81, 51],\r\n\t[4, 50, 22, 4, 51, 23],\r\n\t[3, 36, 12, 8, 37, 13],\r\n\r\n\t// 12\r\n\t[2, 116, 92, 2, 117, 93],\r\n\t[6, 58, 36, 2, 59, 37],\r\n\t[4, 46, 20, 6, 47, 21],\r\n\t[7, 42, 14, 4, 43, 15],\r\n\r\n\t// 13\r\n\t[4, 133, 107],\r\n\t[8, 59, 37, 1, 60, 38],\r\n\t[8, 44, 20, 4, 45, 21],\r\n\t[12, 33, 11, 4, 34, 12],\r\n\r\n\t// 14\r\n\t[3, 145, 115, 1, 146, 116],\r\n\t[4, 64, 40, 5, 65, 41],\r\n\t[11, 36, 16, 5, 37, 17],\r\n\t[11, 36, 12, 5, 37, 13],\r\n\r\n\t// 15\r\n\t[5, 109, 87, 1, 110, 88],\r\n\t[5, 65, 41, 5, 66, 42],\r\n\t[5, 54, 24, 7, 55, 25],\r\n\t[11, 36, 12],\r\n\r\n\t// 16\r\n\t[5, 122, 98, 1, 123, 99],\r\n\t[7, 73, 45, 3, 74, 46],\r\n\t[15, 43, 19, 2, 44, 20],\r\n\t[3, 45, 15, 13, 46, 16],\r\n\r\n\t// 17\r\n\t[1, 135, 107, 5, 136, 108],\r\n\t[10, 74, 46, 1, 75, 47],\r\n\t[1, 50, 22, 15, 51, 23],\r\n\t[2, 42, 14, 17, 43, 15],\r\n\r\n\t// 18\r\n\t[5, 150, 120, 1, 151, 121],\r\n\t[9, 69, 43, 4, 70, 44],\r\n\t[17, 50, 22, 1, 51, 23],\r\n\t[2, 42, 14, 19, 43, 15],\r\n\r\n\t// 19\r\n\t[3, 141, 113, 4, 142, 114],\r\n\t[3, 70, 44, 11, 71, 45],\r\n\t[17, 47, 21, 4, 48, 22],\r\n\t[9, 39, 13, 16, 40, 14],\r\n\r\n\t// 20\r\n\t[3, 135, 107, 5, 136, 108],\r\n\t[3, 67, 41, 13, 68, 42],\r\n\t[15, 54, 24, 5, 55, 25],\r\n\t[15, 43, 15, 10, 44, 16],\r\n\r\n\t// 21\r\n\t[4, 144, 116, 4, 145, 117],\r\n\t[17, 68, 42],\r\n\t[17, 50, 22, 6, 51, 23],\r\n\t[19, 46, 16, 6, 47, 17],\r\n\r\n\t// 22\r\n\t[2, 139, 111, 7, 140, 112],\r\n\t[17, 74, 46],\r\n\t[7, 54, 24, 16, 55, 25],\r\n\t[34, 37, 13],\r\n\r\n\t// 23\r\n\t[4, 151, 121, 5, 152, 122],\r\n\t[4, 75, 47, 14, 76, 48],\r\n\t[11, 54, 24, 14, 55, 25],\r\n\t[16, 45, 15, 14, 46, 16],\r\n\r\n\t// 24\r\n\t[6, 147, 117, 4, 148, 118],\r\n\t[6, 73, 45, 14, 74, 46],\r\n\t[11, 54, 24, 16, 55, 25],\r\n\t[30, 46, 16, 2, 47, 17],\r\n\r\n\t// 25\r\n\t[8, 132, 106, 4, 133, 107],\r\n\t[8, 75, 47, 13, 76, 48],\r\n\t[7, 54, 24, 22, 55, 25],\r\n\t[22, 45, 15, 13, 46, 16],\r\n\r\n\t// 26\r\n\t[10, 142, 114, 2, 143, 115],\r\n\t[19, 74, 46, 4, 75, 47],\r\n\t[28, 50, 22, 6, 51, 23],\r\n\t[33, 46, 16, 4, 47, 17],\r\n\r\n\t// 27\r\n\t[8, 152, 122, 4, 153, 123],\r\n\t[22, 73, 45, 3, 74, 46],\r\n\t[8, 53, 23, 26, 54, 24],\r\n\t[12, 45, 15, 28, 46, 16],\r\n\r\n\t// 28\r\n\t[3, 147, 117, 10, 148, 118],\r\n\t[3, 73, 45, 23, 74, 46],\r\n\t[4, 54, 24, 31, 55, 25],\r\n\t[11, 45, 15, 31, 46, 16],\r\n\r\n\t// 29\r\n\t[7, 146, 116, 7, 147, 117],\r\n\t[21, 73, 45, 7, 74, 46],\r\n\t[1, 53, 23, 37, 54, 24],\r\n\t[19, 45, 15, 26, 46, 16],\r\n\r\n\t// 30\r\n\t[5, 145, 115, 10, 146, 116],\r\n\t[19, 75, 47, 10, 76, 48],\r\n\t[15, 54, 24, 25, 55, 25],\r\n\t[23, 45, 15, 25, 46, 16],\r\n\r\n\t// 31\r\n\t[13, 145, 115, 3, 146, 116],\r\n\t[2, 74, 46, 29, 75, 47],\r\n\t[42, 54, 24, 1, 55, 25],\r\n\t[23, 45, 15, 28, 46, 16],\r\n\r\n\t// 32\r\n\t[17, 145, 115],\r\n\t[10, 74, 46, 23, 75, 47],\r\n\t[10, 54, 24, 35, 55, 25],\r\n\t[19, 45, 15, 35, 46, 16],\r\n\r\n\t// 33\r\n\t[17, 145, 115, 1, 146, 116],\r\n\t[14, 74, 46, 21, 75, 47],\r\n\t[29, 54, 24, 19, 55, 25],\r\n\t[11, 45, 15, 46, 46, 16],\r\n\r\n\t// 34\r\n\t[13, 145, 115, 6, 146, 116],\r\n\t[14, 74, 46, 23, 75, 47],\r\n\t[44, 54, 24, 7, 55, 25],\r\n\t[59, 46, 16, 1, 47, 17],\r\n\r\n\t// 35\r\n\t[12, 151, 121, 7, 152, 122],\r\n\t[12, 75, 47, 26, 76, 48],\r\n\t[39, 54, 24, 14, 55, 25],\r\n\t[22, 45, 15, 41, 46, 16],\r\n\r\n\t// 36\r\n\t[6, 151, 121, 14, 152, 122],\r\n\t[6, 75, 47, 34, 76, 48],\r\n\t[46, 54, 24, 10, 55, 25],\r\n\t[2, 45, 15, 64, 46, 16],\r\n\r\n\t// 37\r\n\t[17, 152, 122, 4, 153, 123],\r\n\t[29, 74, 46, 14, 75, 47],\r\n\t[49, 54, 24, 10, 55, 25],\r\n\t[24, 45, 15, 46, 46, 16],\r\n\r\n\t// 38\r\n\t[4, 152, 122, 18, 153, 123],\r\n\t[13, 74, 46, 32, 75, 47],\r\n\t[48, 54, 24, 14, 55, 25],\r\n\t[42, 45, 15, 32, 46, 16],\r\n\r\n\t// 39\r\n\t[20, 147, 117, 4, 148, 118],\r\n\t[40, 75, 47, 7, 76, 48],\r\n\t[43, 54, 24, 22, 55, 25],\r\n\t[10, 45, 15, 67, 46, 16],\r\n\r\n\t// 40\r\n\t[19, 148, 118, 6, 149, 119],\r\n\t[18, 75, 47, 31, 76, 48],\r\n\t[34, 54, 24, 34, 55, 25],\r\n\t[20, 45, 15, 61, 46, 16]\r\n];\r\n\r\nQRRSBlock.getRSBlocks = function(typeNumber, errorCorrectLevel) {\r\n\t\r\n\tvar rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\r\n\t\r\n\tif (rsBlock == undefined) {\r\n\t\tthrow new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);\r\n\t}\r\n\r\n\tvar length = rsBlock.length / 3;\r\n\t\r\n\tvar list = new Array();\r\n\t\r\n\tfor (var i = 0; i < length; i++) {\r\n\r\n\t\tvar count = rsBlock[i * 3 + 0];\r\n\t\tvar totalCount = rsBlock[i * 3 + 1];\r\n\t\tvar dataCount  = rsBlock[i * 3 + 2];\r\n\r\n\t\tfor (var j = 0; j < count; j++) {\r\n\t\t\tlist.push(new QRRSBlock(totalCount, dataCount) );\t\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn list;\r\n}\r\n\r\nQRRSBlock.getRsBlockTable = function(typeNumber, errorCorrectLevel) {\r\n\r\n\tswitch(errorCorrectLevel) {\r\n\tcase QRErrorCorrectLevel.L :\r\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\r\n\tcase QRErrorCorrectLevel.M :\r\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\r\n\tcase QRErrorCorrectLevel.Q :\r\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\r\n\tcase QRErrorCorrectLevel.H :\r\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\r\n\tdefault :\r\n\t\treturn undefined;\r\n\t}\r\n}\r\n\r\n//---------------------------------------------------------------------\r\n// QRBitBuffer\r\n//---------------------------------------------------------------------\r\n\r\nfunction QRBitBuffer() {\r\n\tthis.buffer = new Array();\r\n\tthis.length = 0;\r\n}\r\n\r\nQRBitBuffer.prototype = {\r\n\r\n\tget : function(index) {\r\n\t\tvar bufIndex = Math.floor(index / 8);\r\n\t\treturn ( (this.buffer[bufIndex] >>> (7 - index % 8) ) & 1) == 1;\r\n\t},\r\n\t\r\n\tput : function(num, length) {\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\tthis.putBit( ( (num >>> (length - i - 1) ) & 1) == 1);\r\n\t\t}\r\n\t},\r\n\t\r\n\tgetLengthInBits : function() {\r\n\t\treturn this.length;\r\n\t},\r\n\t\r\n\tputBit : function(bit) {\r\n\t\r\n\t\tvar bufIndex = Math.floor(this.length / 8);\r\n\t\tif (this.buffer.length <= bufIndex) {\r\n\t\t\tthis.buffer.push(0);\r\n\t\t}\r\n\t\r\n\t\tif (bit) {\r\n\t\t\tthis.buffer[bufIndex] |= (0x80 >>> (this.length % 8) );\r\n\t\t}\r\n\t\r\n\t\tthis.length++;\r\n\t}\r\n};\r\n", "import QRCode from './src/lib/qrcode'\r\nimport { QRErrorCorrectLevel } from './src/lib/qrcode'\r\n\r\nconst generateQrCode = (options) => {\r\n  // if options is string, \r\n  if( typeof options === 'string' ){\r\n    options\t= { text: options };\r\n  }\r\n\r\n  // set default values\r\n  // typeNumber < 1 for automatic calculation\r\n  options\t= Object.assign( {}, {\r\n    render: \"canvas\",\r\n    width: 256,\r\n    height: 256,\r\n    typeNumber: -1,\r\n    correctLevel: QRErrorCorrectLevel.H,\r\n    background: \"#ffffff\",\r\n    foreground: \"#000000\"\r\n  }, options)\r\n\r\n  \r\n  const createCanvas = () => {\r\n    // create the qrcode itself\r\n    const qrcode\t= new QRCode(options.typeNumber, options.correctLevel)\r\n    qrcode.addData(options.text)\r\n    qrcode.make()\r\n\r\n    // create canvas element\r\n    const canvas\t= document.createElement('canvas')\r\n    canvas.width\t= options.width\r\n    canvas.height\t= options.height\r\n    const ctx\t\t= canvas.getContext('2d')\r\n\r\n    // compute tileW/tileH based on options.width/options.height\r\n    const tileW\t= options.width  / qrcode.getModuleCount()\r\n    const tileH\t= options.height / qrcode.getModuleCount()\r\n\r\n    // draw in the canvas\r\n    for( let row = 0; row < qrcode.getModuleCount(); row++ ){\r\n      for( let col = 0; col < qrcode.getModuleCount(); col++ ){\r\n        ctx.fillStyle = qrcode.isDark(row, col) ? options.foreground : options.background\r\n        var w = (Math.ceil((col+1)*tileW) - Math.floor(col*tileW))\r\n        var h = (Math.ceil((row+1)*tileH) - Math.floor(row*tileH))\r\n        ctx.fillRect(Math.round(col*tileW), Math.round(row*tileH), w, h)\r\n      }\t\r\n    }\r\n    // return just built canvas\r\n    return canvas;\r\n  }\r\n\r\n  const createTable = () => {\r\n    // 创建qrcode解析器\r\n    const qrcode\t= new QRCode(options.typeNumber, options.correctLevel);\r\n    qrcode.addData(options.text);\r\n    qrcode.make();\r\n\r\n    // 创建table元素\r\n    const $table = document.createElement('table')\r\n    $table.style.cssText = `width: ${options.width}px; height: ${options.height}px; border: 0px; border-collapse: collapse; background-color: ${options.background}`\r\n\r\n    const tileW\t= options.width / qrcode.getModuleCount();\r\n    const tileH\t= options.height / qrcode.getModuleCount();\r\n\r\n    // 绘制在表格中\r\n    for(let row = 0; row < qrcode.getModuleCount(); row++ ){\r\n\r\n      const $row = document.createElement('tr')\r\n      $row.style.cssText = `height: ${tileH}px;`\r\n      $table.appendChild($row)\r\n\r\n      for(let col = 0; col < qrcode.getModuleCount(); col++ ){\r\n        const td = document.createElement('td')\r\n        td.style.cssText = `width: ${tileW}px; background-color: ${qrcode.isDark(row, col) ? options.foreground : options.background}`\r\n        $row.appendChild(td)\r\n      }\r\n    }\r\n    \r\n    // 返回表格\r\n    return $table;\r\n  }\r\n\r\n  const element\t= options.render == \"canvas\" ? createCanvas() : createTable()\r\n\r\n  return element\r\n}\r\n\r\nexport default {\r\n  install(Vue){\r\n    Vue.directive('qr', {\r\n      inserted: function(el, binding){\r\n        el.appendChild(generateQrCode(binding.value))\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport {\r\n  generateQrCode\r\n}"],
  "mappings": "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",
  "names": []
}
