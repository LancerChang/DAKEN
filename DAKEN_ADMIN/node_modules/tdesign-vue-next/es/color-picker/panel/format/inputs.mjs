/**
 * tdesign v1.9.5
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _toConsumableArray } from '../../../_chunks/dep-0714c768.mjs';
import { _ as _defineProperty } from '../../../_chunks/dep-2af2f3cc.mjs';
import { defineComponent, computed, reactive, watch, createVNode, mergeProps } from 'vue';
import { t as throttle_1 } from '../../../_chunks/dep-670ff068.mjs';
import props from '../../props.mjs';
import '../../utils/index.mjs';
import { Input } from '../../../input/index.mjs';
import { InputNumber } from '../../../input-number/index.mjs';
import { FORMAT_INPUT_CONFIG } from './config.mjs';
import { Color } from '../../../_common/js/color-picker/color.mjs';
import '../../../_chunks/dep-26ed0cac.mjs';
import '../../../_chunks/dep-ca297029.mjs';
import '../../../_chunks/dep-0659d768.mjs';
import '../../../_chunks/dep-41d56db9.mjs';
import '../../../_chunks/dep-79da3af4.mjs';
import '../../../_chunks/dep-e242a06a.mjs';
import '../../../_chunks/dep-f731006d.mjs';
import '../../../_chunks/dep-3d661c92.mjs';
import '../../../_chunks/dep-7d3c27b1.mjs';
import '../../../_chunks/dep-de53e2e8.mjs';
import '../../../_common/js/color-picker/index.mjs';
import '../../../_common/js/color-picker/cmyk.mjs';
import '../../../_common/js/color-picker/draggable.mjs';
import '../../../_chunks/dep-db66fb97.mjs';
import '../../../_common/js/color-picker/gradient.mjs';
import '../../../_chunks/dep-78b9feac.mjs';
import '../../../_chunks/dep-9672d334.mjs';
import '../../../_chunks/dep-6bcf8998.mjs';
import '../../../_chunks/dep-eb726c0b.mjs';
import '../../../_chunks/dep-83ed1aa0.mjs';
import '../../../_chunks/dep-5196116b.mjs';
import '../../../input/input.mjs';
import '../../../_chunks/dep-bc36f9a0.mjs';
import 'tdesign-icons-vue-next';
import '../../../input/props.mjs';
import '../../../hooks/useDisabled.mjs';
import '../../../_chunks/dep-3b219639.mjs';
import '../../../hooks/useConfig.mjs';
import '../../../config-provider/useConfig.mjs';
import '../../../_chunks/dep-c35bb50c.mjs';
import '../../../_chunks/dep-8f5d66bf.mjs';
import '../../../_chunks/dep-4fb87459.mjs';
import '../../../_chunks/dep-2a05de08.mjs';
import '../../../_chunks/dep-4ee5e119.mjs';
import '../../../_chunks/dep-fe843970.mjs';
import '../../../_chunks/dep-ea111861.mjs';
import '../../../_chunks/dep-b59c8c62.mjs';
import '../../../_chunks/dep-5f0aedd7.mjs';
import '../../../_chunks/dep-5cb3d4ea.mjs';
import '../../../_chunks/dep-2d33c97a.mjs';
import '../../../_chunks/dep-183c499b.mjs';
import '../../../_chunks/dep-4e2e86d1.mjs';
import '../../../_chunks/dep-b76458c6.mjs';
import '../../../_chunks/dep-616c78b0.mjs';
import '../../../_chunks/dep-8ad6255c.mjs';
import '../../../_chunks/dep-ac0f9138.mjs';
import '../../../_chunks/dep-c1b8140c.mjs';
import '../../../_chunks/dep-766c643b.mjs';
import '../../../_chunks/dep-8ce99060.mjs';
import '../../../_chunks/dep-39423da8.mjs';
import '../../../_chunks/dep-de4bb4cb.mjs';
import '../../../_chunks/dep-f9e3f698.mjs';
import '../../../_chunks/dep-5654af14.mjs';
import '../../../_common/js/global-config/default-config.mjs';
import '../../../_common/js/global-config/locale/zh_CN.mjs';
import '../../../_chunks/dep-2b12f580.mjs';
import '../../../_chunks/dep-2a58ca94.mjs';
import '../../../_chunks/dep-115707a4.mjs';
import '../../../config-provider/type.mjs';
import '../../../hooks/useGlobalIcon.mjs';
import '../../../hooks/tnode.mjs';
import '../../../_chunks/dep-8fde58dd.mjs';
import '../../../_chunks/dep-5b49f687.mjs';
import '../../../_chunks/dep-4ab8ef1f.mjs';
import '../../../_chunks/dep-dee62ba9.mjs';
import '../../../_chunks/dep-91b73ccb.mjs';
import '../../../_chunks/dep-e6085593.mjs';
import '../../../utils/render-tnode.mjs';
import '../../../_chunks/dep-91bceb4f.mjs';
import '../../../input/useInput.mjs';
import '../../../form/const.mjs';
import '../../../hooks/index.mjs';
import '../../../hooks/icon.mjs';
import '../../../hooks/slot.mjs';
import '../../../hooks/useCommonClassName.mjs';
import '../../../hooks/useDefaultValue.mjs';
import '../../../hooks/useDestroyOnClose.mjs';
import '../../../hooks/useKeepAnimation.mjs';
import '../../../hooks/useRipple.mjs';
import '../../../utils/set-style.mjs';
import '../../../hooks/useVirtualScroll.mjs';
import '../../../hooks/useVModel.mjs';
import '../../../hooks/useImagePreviewUrl.mjs';
import '../../../_common/js/upload/utils.mjs';
import '../../../_common/js/log/log.mjs';
import '../../../input/useLengthLimit.mjs';
import '../../../_common/js/log/index.mjs';
import '../../../_common/js/utils/helper.mjs';
import '../../../_chunks/dep-1bbef55d.mjs';
import '../../../_chunks/dep-44a188ed.mjs';
import '../../../input/useInputEventHandler.mjs';
import '../../../input/useInputWidth.mjs';
import '../../../hooks/useResizeObserver.mjs';
import '../../../input/input-group.mjs';
import '../../../input/input-group-props.mjs';
import '../../../utils/withInstall.mjs';
import './style/css.mjs';
import '../../../input/type.mjs';
import '../../../input-number/input-number.mjs';
import '../../../button/index.mjs';
import '../../../button/button.mjs';
import '../../../loading/index.mjs';
import '../../../_chunks/dep-b29cd8fe.mjs';
import '../../../_chunks/dep-546d3f9b.mjs';
import '../../../_chunks/dep-e33169b8.mjs';
import '../../../_chunks/dep-0b5ca4b8.mjs';
import '../../../_chunks/dep-fe99cdb6.mjs';
import '../../../_chunks/dep-f5778e4b.mjs';
import '../../../_chunks/dep-7fab1039.mjs';
import '../../../_chunks/dep-865d41b7.mjs';
import '../../../loading/plugin.mjs';
import '../../../loading/loading.mjs';
import '../../../loading/icon/gradient.mjs';
import '../../../_common/js/loading/circle-adapter.mjs';
import '../../../_common/js/utils/set-style.mjs';
import '../../../utils/dom.mjs';
import '../../../utils/easing.mjs';
import '../../../loading/props.mjs';
import '../../../hooks/useTeleport.mjs';
import '../../../loading/type.mjs';
import '../../../button/props.mjs';
import '../../../button/type.mjs';
import '../../../input-number/props.mjs';
import '../../../input-number/useInputNumber.mjs';
import '../../../_common/js/input-number/number.mjs';
import '../../../_common/js/input-number/large-number.mjs';
import '../../../input-number/type.mjs';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var FormatInputs = defineComponent({
  name: "FormatInputs",
  inheritAttrs: false,
  props: _objectSpread(_objectSpread({}, props), {}, {
    color: {
      type: Object
    },
    onInputChange: {
      type: Function,
      "default": function _default() {
        return function () {};
      }
    }
  }),
  setup: function setup(props2) {
    var inputConfigs = computed(function () {
      var configs = _toConsumableArray(FORMAT_INPUT_CONFIG[props2.format]);
      if (props2.enableAlpha) {
        configs.push({
          type: "inputNumber",
          key: "a",
          min: 0,
          max: 100,
          format: function format(value) {
            return "".concat(value, "%");
          },
          flex: 1.15
        });
      }
      return configs;
    });
    var modelValue = reactive({});
    var lastModelValue = reactive({});
    var getFormatColorMap = function getFormatColorMap(type) {
      var color = props2.color;
      if (type === "encode") {
        return {
          HSV: color.getHsva(),
          HSL: color.getHsla(),
          RGB: color.getRgba(),
          CMYK: color.getCmyk(),
          CSS: {
            css: color.css
          },
          HEX: {
            hex: color.hex
          }
        };
      }
      return {
        HSV: Color.object2color(modelValue, "HSV"),
        HSL: Color.object2color(modelValue, "HSL"),
        RGB: Color.object2color(modelValue, "RGB"),
        CMYK: Color.object2color(modelValue, "CMYK"),
        CSS: modelValue.css,
        HEX: modelValue.hex
      };
    };
    var updateModelValue = function updateModelValue() {
      var format = props2.format,
        color = props2.color;
      var values = getFormatColorMap("encode")[format];
      values.a = Math.round(color.alpha * 100);
      Object.keys(values).forEach(function (key) {
        modelValue[key] = values[key];
        lastModelValue[key] = values[key];
      });
    };
    updateModelValue();
    var throttleUpdate = throttle_1(updateModelValue, 100);
    watch(function () {
      var _props2$color = props2.color,
        saturation = _props2$color.saturation,
        hue = _props2$color.hue,
        value = _props2$color.value,
        alpha = _props2$color.alpha,
        css = _props2$color.css;
      return [saturation, hue, value, alpha, css, props2.format];
    }, throttleUpdate);
    var handleChange = function handleChange(key, v) {
      if (v === lastModelValue[key]) {
        return;
      }
      var value = getFormatColorMap("decode")[props2.format];
      props2.onInputChange(value, modelValue.a / 100, key, v);
    };
    return {
      modelValue: modelValue,
      inputConfigs: inputConfigs,
      handleChange: handleChange
    };
  },
  render: function render() {
    var _this = this;
    var inputProps = _objectSpread({}, this.inputProps || {});
    return createVNode("div", {
      "class": "input-group"
    }, [this.inputConfigs.map(function (config) {
      return createVNode("div", {
        "class": "input-group__item",
        "key": config.key,
        "style": {
          flex: config.flex || 1
        }
      }, [config.type === "input" ? createVNode(Input, mergeProps(inputProps, {
        "align": "center",
        "size": "small",
        "disabled": _this.disabled,
        "modelValue": _this.modelValue[config.key],
        "onUpdate:modelValue": function onUpdateModelValue($event) {
          return _this.modelValue[config.key] = $event;
        },
        "maxlength": _this.format === "HEX" ? 9 : void 0,
        "title": _this.modelValue[config.key],
        "onBlur": function onBlur(v) {
          return _this.handleChange(config.key, v);
        },
        "onEnter": function onEnter(v) {
          return _this.handleChange(config.key, v);
        }
      }), null) : createVNode(InputNumber, mergeProps(inputProps, {
        "align": "center",
        "size": "small",
        "disabled": _this.disabled,
        "modelValue": _this.modelValue[config.key],
        "onUpdate:modelValue": function onUpdateModelValue($event) {
          return _this.modelValue[config.key] = $event;
        },
        "title": _this.modelValue[config.key],
        "min": config.min,
        "max": config.max,
        "step": 1,
        "format": config.format,
        "theme": "normal",
        "onBlur": function onBlur(v) {
          return _this.handleChange(config.key, v);
        },
        "onEnter": function onEnter(v) {
          return _this.handleChange(config.key, v);
        }
      }), null)]);
    })]);
  }
});

export { FormatInputs as default };
//# sourceMappingURL=inputs.mjs.map
