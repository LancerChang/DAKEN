/**
 * tdesign v1.9.5
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-2af2f3cc.mjs';
import { _ as _typeof } from '../_chunks/dep-ca297029.mjs';
import { defineComponent, ref, onMounted, onBeforeUnmount, computed, createVNode, Fragment, createTextVNode } from 'vue';
import { BacktopIcon } from 'tdesign-icons-vue-next';
import { scrollTo } from '../utils/dom.mjs';
import '../hooks/index.mjs';
import { useGlobalIcon } from '../hooks/useGlobalIcon.mjs';
import props from './props.mjs';
import { usePrefixClass } from '../hooks/useConfig.mjs';
import { useConfig } from '../config-provider/useConfig.mjs';
import { useContent } from '../hooks/tnode.mjs';
import { useChildSlots } from '../hooks/slot.mjs';
import '../_chunks/dep-0659d768.mjs';
import '../_chunks/dep-78b9feac.mjs';
import '../_chunks/dep-f731006d.mjs';
import '../_chunks/dep-9672d334.mjs';
import '../_chunks/dep-6bcf8998.mjs';
import '../_chunks/dep-de53e2e8.mjs';
import '../_chunks/dep-c35bb50c.mjs';
import '../_chunks/dep-79da3af4.mjs';
import '../_chunks/dep-e242a06a.mjs';
import '../utils/easing.mjs';
import '../hooks/icon.mjs';
import '../hooks/useCommonClassName.mjs';
import '../hooks/useDefaultValue.mjs';
import '../_chunks/dep-e6085593.mjs';
import '../_chunks/dep-91b73ccb.mjs';
import '../_chunks/dep-5b49f687.mjs';
import '../_chunks/dep-7d3c27b1.mjs';
import '../hooks/useDestroyOnClose.mjs';
import '../hooks/useKeepAnimation.mjs';
import '../_chunks/dep-766c643b.mjs';
import '../_chunks/dep-2a05de08.mjs';
import '../_chunks/dep-4ee5e119.mjs';
import '../_chunks/dep-fe843970.mjs';
import '../_chunks/dep-ea111861.mjs';
import '../_chunks/dep-b59c8c62.mjs';
import '../_chunks/dep-5f0aedd7.mjs';
import '../_chunks/dep-5cb3d4ea.mjs';
import '../_chunks/dep-2d33c97a.mjs';
import '../_chunks/dep-183c499b.mjs';
import '../_chunks/dep-4e2e86d1.mjs';
import '../_chunks/dep-b76458c6.mjs';
import '../_chunks/dep-616c78b0.mjs';
import '../_chunks/dep-8ce99060.mjs';
import '../_chunks/dep-39423da8.mjs';
import '../_chunks/dep-de4bb4cb.mjs';
import '../_chunks/dep-f9e3f698.mjs';
import '../_chunks/dep-5654af14.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../_chunks/dep-2b12f580.mjs';
import '../_chunks/dep-2a58ca94.mjs';
import '../_chunks/dep-115707a4.mjs';
import '../hooks/useRipple.mjs';
import '../utils/set-style.mjs';
import '../hooks/useVirtualScroll.mjs';
import '../hooks/useVModel.mjs';
import '../hooks/useImagePreviewUrl.mjs';
import '../_chunks/dep-5196116b.mjs';
import '../_chunks/dep-26ed0cac.mjs';
import '../_common/js/upload/utils.mjs';
import '../_common/js/log/log.mjs';
import '../_chunks/dep-8f5d66bf.mjs';
import '../_chunks/dep-4fb87459.mjs';
import '../_chunks/dep-8ad6255c.mjs';
import '../_chunks/dep-ac0f9138.mjs';
import '../_chunks/dep-c1b8140c.mjs';
import '../config-provider/type.mjs';
import '../_chunks/dep-8fde58dd.mjs';
import '../_chunks/dep-4ab8ef1f.mjs';
import '../_chunks/dep-dee62ba9.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-91bceb4f.mjs';

var _BackTop = defineComponent({
  name: "TBackTop",
  props: props,
  setup: function setup(props2) {
    var visible = ref(false);
    var containerRef = ref(null);
    var componentName = usePrefixClass("back-top");
    var _useConfig = useConfig("alert"),
      classPrefix = _useConfig.classPrefix;
    var _useGlobalIcon = useGlobalIcon({
        BacktopIcon: BacktopIcon
      }),
      BacktopIcon$1 = _useGlobalIcon.BacktopIcon;
    var renderContent = useContent();
    var getContainer = function getContainer(container) {
      if (typeof container === "string" && (typeof document === "undefined" ? "undefined" : _typeof(document)) !== void 0) {
        if (container === "body") {
          return document;
        }
        return document.querySelector(container);
      }
      if (typeof container === "function") {
        return container();
      }
      return null;
    };
    onMounted(function () {
      containerRef.value = getContainer(props2.container);
      var visibleHeight;
      if (typeof props2.visibleHeight === "string") {
        visibleHeight = Number(props2.visibleHeight.replace("px", ""));
      } else {
        visibleHeight = props2.visibleHeight;
      }
      if (visibleHeight === 0) {
        visible.value = true;
        return;
      }
      var scrollDOM;
      if (containerRef.value.scrollTop === void 0) {
        scrollDOM = document.documentElement;
      } else {
        scrollDOM = containerRef.value;
      }
      containerRef.value.onscroll = function () {
        var _scrollDOM;
        var scrollTop = (_scrollDOM = scrollDOM) === null || _scrollDOM === void 0 ? void 0 : _scrollDOM.scrollTop;
        if (scrollTop >= visibleHeight) {
          visible.value = true;
        }
        if (scrollTop < visibleHeight && visible.value) {
          visible.value = false;
        }
      };
    });
    onBeforeUnmount(function () {
      containerRef.value.onscroll = null;
    });
    return function () {
      var theme = props2.theme,
        shape = props2.shape,
        size = props2.size,
        target = props2.target,
        duration = props2.duration,
        offset = props2.offset,
        container = props2.container;
      var getChild = useChildSlots();
      var children = getChild();
      if (children.length < 1) children = null;
      var cls = computed(function () {
        return _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, componentName.value, true), "".concat(componentName.value, "--theme-").concat(theme), true), "".concat(componentName.value, "--").concat(shape), true), "".concat(componentName.value, "--show"), visible.value), "".concat(classPrefix.value, "-size-s"), size === "small"), "".concat(classPrefix.value, "-size-m"), size === "medium");
      });
      var defaultContent = createVNode(Fragment, null, [createVNode(BacktopIcon$1, {
        "class": "".concat(componentName.value, "__icon"),
        "size": "24"
      }, null), createVNode("span", {
        "class": "".concat(componentName.value, "__text")
      }, [createTextVNode("TOP")])]);
      var getBackTo = function getBackTo() {
        if (target === container) return 0;
        if (target === "body") return 0;
        if (!target) return 0;
        var targetNode = getContainer(target);
        if (!targetNode) return 0;
        var y = targetNode.getBoundingClientRect().y;
        return y;
      };
      var handleClick = function handleClick(e) {
        var _props2$onClick;
        var y = getBackTo();
        scrollTo(y, {
          container: containerRef.value,
          duration: duration
        });
        (_props2$onClick = props2.onClick) === null || _props2$onClick === void 0 || _props2$onClick.call(props2, {
          e: e
        });
      };
      var positionStyle = computed(function () {
        return {
          insetInlineEnd: offset[0],
          insetBlockEnd: offset[1]
        };
      });
      return createVNode("button", {
        "type": "button",
        "class": cls.value,
        "style": positionStyle.value,
        "onClick": handleClick
      }, [renderContent("content", "default", defaultContent)]);
    };
  }
});

export { _BackTop as default };
//# sourceMappingURL=back-top.mjs.map
