/**
 * tdesign v1.9.5
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _objectWithoutProperties } from '../_chunks/dep-bc36f9a0.mjs';
import { _ as _slicedToArray } from '../_chunks/dep-5196116b.mjs';
import { _ as _defineProperty } from '../_chunks/dep-2af2f3cc.mjs';
import { toRefs, ref, computed, createVNode, mergeProps } from 'vue';
import { i as isObject_1 } from '../_chunks/dep-79da3af4.mjs';
import { p as pick_1 } from '../_chunks/dep-30c143bf.mjs';
import { Input } from '../input/index.mjs';
import { Loading } from '../loading/index.mjs';
import { useTNodeJSX } from '../hooks/tnode.mjs';
import { usePrefixClass } from '../hooks/useConfig.mjs';
import useDefaultValue from '../hooks/useDefaultValue.mjs';
import { useDisabled } from '../hooks/useDisabled.mjs';
import '../_chunks/dep-26ed0cac.mjs';
import '../_chunks/dep-ca297029.mjs';
import '../_chunks/dep-0659d768.mjs';
import '../_chunks/dep-f5778e4b.mjs';
import '../_chunks/dep-9672d334.mjs';
import '../_chunks/dep-6bcf8998.mjs';
import '../_chunks/dep-7d3c27b1.mjs';
import '../_chunks/dep-f731006d.mjs';
import '../_chunks/dep-de53e2e8.mjs';
import '../_chunks/dep-4ee5e119.mjs';
import '../_chunks/dep-fe843970.mjs';
import '../_chunks/dep-c35bb50c.mjs';
import '../_chunks/dep-e242a06a.mjs';
import '../_chunks/dep-ea111861.mjs';
import '../_chunks/dep-b59c8c62.mjs';
import '../_chunks/dep-5b49f687.mjs';
import '../_chunks/dep-fc25c249.mjs';
import '../_chunks/dep-183c499b.mjs';
import '../_chunks/dep-4e2e86d1.mjs';
import '../_chunks/dep-616c78b0.mjs';
import '../_chunks/dep-7fab1039.mjs';
import '../_chunks/dep-b76458c6.mjs';
import '../_chunks/dep-5cb3d4ea.mjs';
import '../_chunks/dep-0dc95788.mjs';
import '../_chunks/dep-c1b8140c.mjs';
import '../_chunks/dep-de4bb4cb.mjs';
import '../_chunks/dep-39423da8.mjs';
import '../input/input.mjs';
import 'tdesign-icons-vue-next';
import '../input/props.mjs';
import '../hooks/useGlobalIcon.mjs';
import '../config-provider/useConfig.mjs';
import '../_chunks/dep-8f5d66bf.mjs';
import '../_chunks/dep-4fb87459.mjs';
import '../_chunks/dep-2a05de08.mjs';
import '../_chunks/dep-5f0aedd7.mjs';
import '../_chunks/dep-2d33c97a.mjs';
import '../_chunks/dep-8ad6255c.mjs';
import '../_chunks/dep-ac0f9138.mjs';
import '../_chunks/dep-78b9feac.mjs';
import '../_chunks/dep-766c643b.mjs';
import '../_chunks/dep-8ce99060.mjs';
import '../_chunks/dep-f9e3f698.mjs';
import '../_chunks/dep-5654af14.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../_chunks/dep-2b12f580.mjs';
import '../_chunks/dep-2a58ca94.mjs';
import '../_chunks/dep-115707a4.mjs';
import '../config-provider/type.mjs';
import '../input/useInput.mjs';
import '../form/const.mjs';
import '../hooks/index.mjs';
import '../hooks/icon.mjs';
import '../hooks/slot.mjs';
import '../hooks/useCommonClassName.mjs';
import '../hooks/useDestroyOnClose.mjs';
import '../hooks/useKeepAnimation.mjs';
import '../hooks/useRipple.mjs';
import '../utils/set-style.mjs';
import '../hooks/useVirtualScroll.mjs';
import '../hooks/useVModel.mjs';
import '../_chunks/dep-e6085593.mjs';
import '../_chunks/dep-91b73ccb.mjs';
import '../hooks/useImagePreviewUrl.mjs';
import '../_common/js/upload/utils.mjs';
import '../_common/js/log/log.mjs';
import '../_chunks/dep-8fde58dd.mjs';
import '../_chunks/dep-4ab8ef1f.mjs';
import '../_chunks/dep-dee62ba9.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-91bceb4f.mjs';
import '../input/useLengthLimit.mjs';
import '../_common/js/log/index.mjs';
import '../_common/js/utils/helper.mjs';
import '../_chunks/dep-0714c768.mjs';
import '../_chunks/dep-eb726c0b.mjs';
import '../_chunks/dep-1bbef55d.mjs';
import '../_chunks/dep-44a188ed.mjs';
import '../_chunks/dep-3b219639.mjs';
import '../input/useInputEventHandler.mjs';
import '../input/useInputWidth.mjs';
import '../hooks/useResizeObserver.mjs';
import '../input/input-group.mjs';
import '../input/input-group-props.mjs';
import '../utils/withInstall.mjs';
import './style/css.mjs';
import '../input/type.mjs';
import '../_chunks/dep-b29cd8fe.mjs';
import '../_chunks/dep-546d3f9b.mjs';
import '../_chunks/dep-e33169b8.mjs';
import '../_chunks/dep-0b5ca4b8.mjs';
import '../_chunks/dep-fe99cdb6.mjs';
import '../_chunks/dep-865d41b7.mjs';
import '../loading/plugin.mjs';
import '../loading/loading.mjs';
import '../loading/icon/gradient.mjs';
import '../_common/js/loading/circle-adapter.mjs';
import '../_common/js/utils/set-style.mjs';
import '../utils/dom.mjs';
import '../utils/easing.mjs';
import '../loading/props.mjs';
import '../hooks/useTeleport.mjs';
import '../loading/type.mjs';

var _excluded = ["tips"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var COMMON_PROPERTIES = ["status", "clearable", "disabled", "label", "placeholder", "readonly", "suffix", "suffixIcon", "onPaste", "onMouseenter", "onMouseleave"];
var DEFAULT_KEYS = {
  label: "label",
  value: "value",
  children: "children"
};
function getInputValue(value, keys) {
  var iKeys = _objectSpread(_objectSpread({}, DEFAULT_KEYS), keys);
  return isObject_1(value) ? value[iKeys.label] : value;
}
function useSingle(props, context, popupRef) {
  var _props$defaultInputVa;
  var _toRefs = toRefs(props),
    value = _toRefs.value,
    keys = _toRefs.keys,
    propsInputValue = _toRefs.inputValue;
  var classPrefix = usePrefixClass();
  var isSingleFocus = ref(props.autofocus);
  var inputRef = ref();
  var _useDefaultValue = useDefaultValue(propsInputValue, (_props$defaultInputVa = props.defaultInputValue) !== null && _props$defaultInputVa !== void 0 ? _props$defaultInputVa : "", props.onInputChange, "inputValue"),
    _useDefaultValue2 = _slicedToArray(_useDefaultValue, 2),
    inputValue = _useDefaultValue2[0],
    setInputValue = _useDefaultValue2[1];
  var renderTNode = useTNodeJSX();
  var disable = useDisabled();
  var commonInputProps = computed(function () {
    return _objectSpread(_objectSpread({}, pick_1(props, COMMON_PROPERTIES)), {}, {
      disabled: disable.value
    });
  });
  var onInnerClear = function onInnerClear(context2) {
    var _context2$e, _props$onClear;
    context2 === null || context2 === void 0 || (_context2$e = context2.e) === null || _context2$e === void 0 || _context2$e.stopPropagation();
    (_props$onClear = props.onClear) === null || _props$onClear === void 0 || _props$onClear.call(props, context2);
    setInputValue("", {
      trigger: "clear"
    });
  };
  var onInnerInputChange = function onInnerInputChange(value2, context2) {
    if (props.allowInput) {
      setInputValue(value2, _objectSpread(_objectSpread({}, context2), {}, {
        trigger: context2.trigger || "input"
      }));
    }
  };
  var renderSelectSingle = function renderSelectSingle(popupVisible) {
    var _context$attrs;
    var singleValueDisplay = renderTNode("valueDisplay");
    var displayedValue = popupVisible && props.allowInput ? inputValue.value : getInputValue(value.value, keys.value);
    var prefixContent = renderPrefixContent(singleValueDisplay, popupVisible);
    var inputProps = _objectSpread(_objectSpread({}, commonInputProps.value), {}, {
      value: renderInputDisplay(singleValueDisplay, displayedValue, popupVisible),
      label: prefixContent.length ? function () {
        return prefixContent;
      } : void 0,
      autoWidth: props.autoWidth,
      readonly: !props.allowInput || props.readonly,
      placeholder: renderPlaceholder(singleValueDisplay),
      suffixIcon: !disable.value && props.loading ? function () {
        return createVNode(Loading, {
          "loading": true,
          "size": "small"
        }, null);
      } : props.suffixIcon,
      showClearIconOnEmpty: Boolean(props.clearable && (inputValue.value || displayedValue) && !disable.value && !props.readonly)
    }, props.inputProps);
    var _context$slots = context.slots,
      tips = _context$slots.tips,
      slots = _objectWithoutProperties(_context$slots, _excluded);
    var inputClassProps = popupVisible ? ["".concat(classPrefix.value, "-input--focused"), "".concat(classPrefix.value, "-is-focused"), inputProps === null || inputProps === void 0 ? void 0 : inputProps.inputClass] : inputProps === null || inputProps === void 0 ? void 0 : inputProps.inputClass;
    var onEnter = function onEnter(val, context2) {
      var _props$onEnter;
      (_props$onEnter = props.onEnter) === null || _props$onEnter === void 0 || _props$onEnter.call(props, value.value, _objectSpread(_objectSpread({}, context2), {}, {
        inputValue: val
      }));
    };
    var onFocus = function onFocus(val, context2) {
      var _popupRef$value, _props$onFocus;
      var overlayState = (_popupRef$value = popupRef.value) === null || _popupRef$value === void 0 ? void 0 : _popupRef$value.getOverlayState();
      if (isSingleFocus.value || overlayState !== null && overlayState !== void 0 && overlayState.hover) return;
      isSingleFocus.value = true;
      (_props$onFocus = props.onFocus) === null || _props$onFocus === void 0 || _props$onFocus.call(props, value.value, _objectSpread(_objectSpread({}, context2), {}, {
        inputValue: val
      }));
    };
    var onBlur = function onBlur(val, context2) {
      var _popupRef$value2, _props$onBlur;
      var overlayState = (_popupRef$value2 = popupRef.value) === null || _popupRef$value2 === void 0 ? void 0 : _popupRef$value2.getOverlayState();
      if (overlayState !== null && overlayState !== void 0 && overlayState.hover) return;
      isSingleFocus.value = false;
      (_props$onBlur = props.onBlur) === null || _props$onBlur === void 0 || _props$onBlur.call(props, value.value, _objectSpread(_objectSpread({}, context2), {}, {
        inputValue: val
      }));
    };
    return createVNode(Input, mergeProps({
      "ref": inputRef,
      "style": (_context$attrs = context.attrs) === null || _context$attrs === void 0 ? void 0 : _context$attrs.style
    }, _objectSpread({
      onChange: onInnerInputChange,
      onClear: onInnerClear,
      onEnter: onEnter,
      onFocus: onFocus,
      onBlur: onBlur
    }, inputProps), {
      "inputClass": inputClassProps
    }), slots);
  };
  var renderPrefixContent = function renderPrefixContent(singleValueDisplay, popupVisible) {
    var label = renderTNode("label");
    if (!label && !singleValueDisplay) {
      return [];
    }
    if (singleValueDisplay) {
      var _props$valueDisplayOp, _props$valueDisplayOp2;
      if ((_props$valueDisplayOp = props.valueDisplayOptions) !== null && _props$valueDisplayOp !== void 0 && _props$valueDisplayOp.usePlaceholder && !value.value || (_props$valueDisplayOp2 = props.valueDisplayOptions) !== null && _props$valueDisplayOp2 !== void 0 && _props$valueDisplayOp2.useInputDisplay && popupVisible) {
        return [label];
      }
    }
    return [label, singleValueDisplay];
  };
  var renderInputDisplay = function renderInputDisplay(singleValueDisplay, displayedValue, popupVisible) {
    if (singleValueDisplay) {
      var _props$valueDisplayOp3, _props$valueDisplayOp4;
      if (!((_props$valueDisplayOp3 = props.valueDisplayOptions) !== null && _props$valueDisplayOp3 !== void 0 && _props$valueDisplayOp3.useInputDisplay) || (_props$valueDisplayOp4 = props.valueDisplayOptions) !== null && _props$valueDisplayOp4 !== void 0 && _props$valueDisplayOp4.useInputDisplay && !popupVisible) {
        return void 0;
      }
    }
    return displayedValue;
  };
  var renderPlaceholder = function renderPlaceholder(singleValueDisplay) {
    if (singleValueDisplay) {
      var _props$valueDisplayOp5, _props$valueDisplayOp6;
      if (!((_props$valueDisplayOp5 = props.valueDisplayOptions) !== null && _props$valueDisplayOp5 !== void 0 && _props$valueDisplayOp5.usePlaceholder) || (_props$valueDisplayOp6 = props.valueDisplayOptions) !== null && _props$valueDisplayOp6 !== void 0 && _props$valueDisplayOp6.usePlaceholder && value.value) {
        return "";
      }
    }
    return props.placeholder;
  };
  return {
    inputRef: inputRef,
    isSingleFocus: isSingleFocus,
    commonInputProps: commonInputProps,
    singleInputValue: inputValue,
    onInnerClear: onInnerClear,
    renderSelectSingle: renderSelectSingle
  };
}

export { useSingle as default };
//# sourceMappingURL=useSingle.mjs.map
